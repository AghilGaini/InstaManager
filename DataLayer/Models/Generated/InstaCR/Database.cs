




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `InstaCR`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=51.178.215.252;Initial Catalog=InstaCR;Integrated Security=False;User Id=admin;password=**zapped**;MultipleActiveResultSets=True`
//     Schema:                 ``
//     Include Views:          `True`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace DataLayer.Models.Generated.InstaCR
{

	public partial class InstaCRDB : Database
	{
		public InstaCRDB() 
			: base("InstaCR")
		{
			CommonConstruct();
		}

		public InstaCRDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			InstaCRDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static InstaCRDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new InstaCRDB();
        }

		[ThreadStatic] static InstaCRDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static InstaCRDB repo { get { return InstaCRDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("[dbo].[States]")]




	[ExplicitColumns]

    public partial class State : InstaCRDB.Record<State>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string TitleFa = @"TitleFa";
			
				public static string TitleEN = @"TitleEN";
			
		}





		[Column] public int ID { get; set; }





		[Column] public string TitleFa { get; set; }





		[Column] public string TitleEN { get; set; }



	}

    

	[TableName("[dbo].[VW_AccountCategories]")]




	[ExplicitColumns]

    public partial class VW_AccountCategory : InstaCRDB.Record<VW_AccountCategory>  
    {

	

		public static class Columns
		{	
			
				public static string UserName = @"UserName";
			
				public static string BIO = @"BIO";
			
				public static string FullName = @"FullName";
			
				public static string FollowerCount = @"FollowerCount";
			
				public static string AID = @"AID";
			
				public static string AccountID = @"AccountID";
			
				public static string CategoryID = @"CategoryID";
			
				public static string ID = @"ID";
			
				public static string TitleFa = @"TitleFa";
			
		}





		[Column] public string UserName { get; set; }





		[Column] public string BIO { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public int? FollowerCount { get; set; }





		[Column] public int AID { get; set; }





		[Column] public long? AccountID { get; set; }





		[Column] public int? CategoryID { get; set; }





		[Column] public int? ID { get; set; }





		[Column] public string TitleFa { get; set; }



	}

    

	[TableName("[dbo].[Vw_AccountsWithoutCategory]")]




	[ExplicitColumns]

    public partial class Vw_AccountsWithoutCategory : InstaCRDB.Record<Vw_AccountsWithoutCategory>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string InstaID = @"InstaID";
			
				public static string UserName = @"UserName";
			
				public static string FullName = @"FullName";
			
				public static string BIO = @"BIO";
			
				public static string IsPrivate = @"IsPrivate";
			
				public static string IsBuisiness = @"IsBuisiness";
			
				public static string IsJoinedRecently = @"IsJoinedRecently";
			
				public static string FollowerCount = @"FollowerCount";
			
				public static string FollowingCount = @"FollowingCount";
			
				public static string PostCount = @"PostCount";
			
				public static string ProfilePicUrl = @"ProfilePicUrl";
			
				public static string CreationDate = @"CreationDate";
			
				public static string IsActive = @"IsActive";
			
				public static string State = @"State";
			
				public static string LastTimeUpdated = @"LastTimeUpdated";
			
				public static string InstaUrl = @"InstaUrl";
			
				public static string IsChecked = @"IsChecked";
			
		}





		[Column] public int ID { get; set; }





		[Column] public long? InstaID { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public string BIO { get; set; }





		[Column] public bool? IsPrivate { get; set; }





		[Column] public bool? IsBuisiness { get; set; }





		[Column] public bool? IsJoinedRecently { get; set; }





		[Column] public int? FollowerCount { get; set; }





		[Column] public int? FollowingCount { get; set; }





		[Column] public int? PostCount { get; set; }





		[Column] public string ProfilePicUrl { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public int? State { get; set; }





		[Column] public DateTime? LastTimeUpdated { get; set; }





		[Column] public string InstaUrl { get; set; }





		[Column] public bool IsChecked { get; set; }



	}

    

	[TableName("[insta].[AccountCategory]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class AccountCategory : InstaCRDB.Record<AccountCategory>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string AccountID = @"AccountID";
			
				public static string CategoryID = @"CategoryID";
			
				public static string CreationDate = @"CreationDate";
			
		}





		[Column] public long ID { get; set; }





		[Column] public int AccountID { get; set; }





		[Column] public int CategoryID { get; set; }





		[Column] public DateTime CreationDate { get; set; }



	}

    

	[TableName("[insta].[AccountContact]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class AccountContact : InstaCRDB.Record<AccountContact>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string AccountID = @"AccountID";
			
				public static string PhoneNumber = @"PhoneNumber";
			
				public static string Email = @"Email";
			
				public static string Tel = @"Tel";
			
		}





		[Column] public long ID { get; set; }





		[Column] public int AccountID { get; set; }





		[Column] public string PhoneNumber { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string Tel { get; set; }



	}

    

	[TableName("[insta].[Accounts]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class Account : InstaCRDB.Record<Account>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string InstaID = @"InstaID";
			
				public static string UserName = @"UserName";
			
				public static string FullName = @"FullName";
			
				public static string BIO = @"BIO";
			
				public static string IsPrivate = @"IsPrivate";
			
				public static string IsBuisiness = @"IsBuisiness";
			
				public static string IsJoinedRecently = @"IsJoinedRecently";
			
				public static string FollowerCount = @"FollowerCount";
			
				public static string FollowingCount = @"FollowingCount";
			
				public static string PostCount = @"PostCount";
			
				public static string ProfilePicUrl = @"ProfilePicUrl";
			
				public static string CreationDate = @"CreationDate";
			
				public static string IsActive = @"IsActive";
			
				public static string State = @"State";
			
				public static string LastTimeUpdated = @"LastTimeUpdated";
			
				public static string InstaUrl = @"InstaUrl";
			
				public static string IsChecked = @"IsChecked";
			
		}





		[Column] public int ID { get; set; }





		[Column] public long? InstaID { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public string BIO { get; set; }





		[Column] public bool? IsPrivate { get; set; }





		[Column] public bool? IsBuisiness { get; set; }





		[Column] public bool? IsJoinedRecently { get; set; }





		[Column] public int? FollowerCount { get; set; }





		[Column] public int? FollowingCount { get; set; }





		[Column] public int? PostCount { get; set; }





		[Column] public string ProfilePicUrl { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public int? State { get; set; }





		[Column] public DateTime? LastTimeUpdated { get; set; }





		[Column] public string InstaUrl { get; set; }





		[Column] public bool IsChecked { get; set; }



	}

    

	[TableName("[insta].[Category]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class Category : InstaCRDB.Record<Category>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string TitleFa = @"TitleFa";
			
				public static string TitleEn = @"TitleEn";
			
				public static string CreationDate = @"CreationDate";
			
				public static string ParentID = @"ParentID";
			
				public static string Type = @"Type";
			
				public static string TypeName = @"TypeName";
			
		}





		[Column] public int ID { get; set; }





		[Column] public string TitleFa { get; set; }





		[Column] public string TitleEn { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public int? ParentID { get; set; }





		[Column] public int? Type { get; set; }





		[Column] public string TypeName { get; set; }



	}

    

	[TableName("[insta].[CrawlQueue]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class CrawlQueue : InstaCRDB.Record<CrawlQueue>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string WordToCrawl = @"WordToCrawl";
			
				public static string Type = @"Type";
			
				public static string Status = @"Status";
			
				public static string Priority = @"Priority";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string WordToCrawl { get; set; }





		[Column] public int Type { get; set; }





		[Column] public int Status { get; set; }





		[Column] public int Priority { get; set; }



	}

    

	[TableName("[insta].[Posts]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class Post : InstaCRDB.Record<Post>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string InstaID = @"InstaID";
			
				public static string ShortCode = @"ShortCode";
			
				public static string DisplayUrl = @"DisplayUrl";
			
				public static string Likes = @"Likes";
			
				public static string AccountID = @"AccountID";
			
				public static string CreationDate = @"CreationDate";
			
				public static string IsActive = @"IsActive";
			
				public static string Caption = @"Caption";
			
				public static string State = @"State";
			
				public static string PostCreationDate = @"PostCreationDate";
			
				public static string PostCreationDateLong = @"PostCreationDateLong";
			
				public static string IsVideo = @"IsVideo";
			
		}





		[Column] public long ID { get; set; }





		[Column] public long InstaID { get; set; }





		[Column] public string ShortCode { get; set; }





		[Column] public string DisplayUrl { get; set; }





		[Column] public long Likes { get; set; }





		[Column] public long AccountID { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public string Caption { get; set; }





		[Column] public int? State { get; set; }





		[Column] public DateTime PostCreationDate { get; set; }





		[Column] public long PostCreationDateLong { get; set; }





		[Column] public bool IsVideo { get; set; }



	}

    

	[TableName("[insta].[PostTags]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class PostTag : InstaCRDB.Record<PostTag>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string Title = @"Title";
			
				public static string PostID = @"PostID";
			
				public static string IsActive = @"IsActive";
			
				public static string CreationDate = @"CreationDate";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string Title { get; set; }





		[Column] public long PostID { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public DateTime CreationDate { get; set; }



	}

    

	[TableName("[insta].[PostUrls]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class PostUrl : InstaCRDB.Record<PostUrl>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string url = @"url";
			
				public static string PostID = @"PostID";
			
				public static string IsActive = @"IsActive";
			
				public static string CreationDate = @"CreationDate";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string url { get; set; }





		[Column] public long PostID { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public DateTime CreationDate { get; set; }



	}

    

	[TableName("[robot].[ActionParam]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class ActionParam : InstaCRDB.Record<ActionParam>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string ActionID = @"ActionID";
			
				public static string TitleEN = @"TitleEN";
			
				public static string TitleFa = @"TitleFa";
			
				public static string IsMandatory = @"IsMandatory";
			
		}





		[Column] public int ID { get; set; }





		[Column] public int ActionID { get; set; }





		[Column] public string TitleEN { get; set; }





		[Column] public string TitleFa { get; set; }





		[Column] public bool IsMandatory { get; set; }



	}

    

	[TableName("[robot].[ActionQueue]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class ActionQueue : InstaCRDB.Record<ActionQueue>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string ActionTypeID = @"ActionTypeID";
			
				public static string LoginAccountID = @"LoginAccountID";
			
				public static string Title = @"Title";
			
				public static string Description = @"Description";
			
				public static string Params = @"Params";
			
				public static string CreationDate = @"CreationDate";
			
				public static string Schedule = @"Schedule";
			
				public static string NumberOfExecutions = @"NumberOfExecutions";
			
				public static string ErrorCode = @"ErrorCode";
			
				public static string ErrorDescription = @"ErrorDescription";
			
				public static string DoneAt = @"DoneAt";
			
				public static string IsActive = @"IsActive";
			
				public static string ReserveNumber = @"ReserveNumber";
			
				public static string JsonValue = @"JsonValue";
			
				public static string Val = @"Val";
			
		}





		[Column] public long ID { get; set; }





		[Column] public int ActionTypeID { get; set; }





		[Column] public long LoginAccountID { get; set; }





		[Column] public string Title { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string Params { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public DateTime Schedule { get; set; }





		[Column] public int NumberOfExecutions { get; set; }





		[Column] public int ErrorCode { get; set; }





		[Column] public string ErrorDescription { get; set; }





		[Column] public DateTime? DoneAt { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public int ReserveNumber { get; set; }





		[Column] public string JsonValue { get; set; }





		[Column] public string Val { get; set; }



	}

    

	[TableName("[robot].[ActionType]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class ActionType : InstaCRDB.Record<ActionType>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string TitleEN = @"TitleEN";
			
				public static string TitleFA = @"TitleFA";
			
				public static string CreationDate = @"CreationDate";
			
		}





		[Column] public int ID { get; set; }





		[Column] public string TitleEN { get; set; }





		[Column] public string TitleFA { get; set; }





		[Column] public DateTime CreationDate { get; set; }



	}

    

	[TableName("[robot].[Content]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class Content : InstaCRDB.Record<Content>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string SourceID = @"SourceID";
			
				public static string Url = @"Url";
			
				public static string ImageUrl = @"ImageUrl";
			
				public static string Description = @"Description";
			
				public static string CreationDate = @"CreationDate";
			
				public static string IsAcive = @"IsAcive";
			
				public static string PostScheduleDate = @"PostScheduleDate";
			
				public static string ContentCreationDate = @"ContentCreationDate";
			
				public static string MediaPath = @"MediaPath";
			
		}





		[Column] public long ID { get; set; }





		[Column] public long SourceID { get; set; }





		[Column] public string Url { get; set; }





		[Column] public string ImageUrl { get; set; }





		[Column] public string Description { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public bool IsAcive { get; set; }





		[Column] public DateTime PostScheduleDate { get; set; }





		[Column] public DateTime? ContentCreationDate { get; set; }





		[Column] public string MediaPath { get; set; }



	}

    

	[TableName("[robot].[InstaAccount]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class InstaAccount : InstaCRDB.Record<InstaAccount>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string Username = @"Username";
			
				public static string Password = @"Password";
			
				public static string CreatedOn = @"CreatedOn";
			
				public static string IsActive = @"IsActive";
			
				public static string IsInUse = @"IsInUse";
			
				public static string IsSpam = @"IsSpam";
			
				public static string IsForScrapping = @"IsForScrapping";
			
				public static string IsBlocked = @"IsBlocked";
			
				public static string LastLoginDate = @"LastLoginDate";
			
				public static string LastLoginResponse = @"LastLoginResponse";
			
				public static string SessionID = @"SessionID";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string Username { get; set; }





		[Column] public string Password { get; set; }





		[Column] public DateTime CreatedOn { get; set; }





		[Column] public bool IsActive { get; set; }





		[Column] public bool IsInUse { get; set; }





		[Column] public bool IsSpam { get; set; }





		[Column] public bool IsForScrapping { get; set; }





		[Column] public bool IsBlocked { get; set; }





		[Column] public DateTime? LastLoginDate { get; set; }





		[Column] public string LastLoginResponse { get; set; }





		[Column] public string SessionID { get; set; }



	}

    

	[TableName("[robot].[InstagramAccounts]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class InstagramAccount : InstaCRDB.Record<InstagramAccount>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string Username = @"Username";
			
				public static string Password = @"Password";
			
				public static string CreationDate = @"CreationDate";
			
				public static string IsActive = @"IsActive";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string Username { get; set; }





		[Column] public string Password { get; set; }





		[Column] public DateTime CreationDate { get; set; }





		[Column] public bool IsActive { get; set; }



	}

    

	[TableName("[robot].[Source]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class Source : InstaCRDB.Record<Source>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string SourceTitle = @"SourceTitle";
			
				public static string SourceUrl = @"SourceUrl";
			
		}





		[Column] public long ID { get; set; }





		[Column] public string SourceTitle { get; set; }





		[Column] public string SourceUrl { get; set; }



	}

    

	[TableName("[robot].[UserFollowers]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class UserFollower : InstaCRDB.Record<UserFollower>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string OwnerAccountInstaID = @"OwnerAccountInstaID";
			
				public static string OwnerAccountUsername = @"OwnerAccountUsername";
			
				public static string RequesterAccountID = @"RequesterAccountID";
			
				public static string InstaID = @"InstaID";
			
				public static string UserName = @"UserName";
			
				public static string FullName = @"FullName";
			
				public static string ProfilePicUrl = @"ProfilePicUrl";
			
				public static string CreatedOn = @"CreatedOn";
			
				public static string IsActive = @"IsActive";
			
		}





		[Column] public long ID { get; set; }





		[Column] public long OwnerAccountInstaID { get; set; }





		[Column] public string OwnerAccountUsername { get; set; }





		[Column] public long RequesterAccountID { get; set; }





		[Column] public long InstaID { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public string ProfilePicUrl { get; set; }





		[Column] public DateTime CreatedOn { get; set; }





		[Column] public bool IsActive { get; set; }



	}

    

	[TableName("[robot].[UserFollowings]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class UserFollowing : InstaCRDB.Record<UserFollowing>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string OwnerAccountInstaID = @"OwnerAccountInstaID";
			
				public static string OwnerAccountUsername = @"OwnerAccountUsername";
			
				public static string RequesterAccountID = @"RequesterAccountID";
			
				public static string InstaID = @"InstaID";
			
				public static string UserName = @"UserName";
			
				public static string FullName = @"FullName";
			
				public static string ProfilePicUrl = @"ProfilePicUrl";
			
				public static string CreatedOn = @"CreatedOn";
			
				public static string IsActive = @"IsActive";
			
		}





		[Column] public long ID { get; set; }





		[Column] public long OwnerAccountInstaID { get; set; }





		[Column] public string OwnerAccountUsername { get; set; }





		[Column] public long RequesterAccountID { get; set; }





		[Column] public long InstaID { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public string ProfilePicUrl { get; set; }





		[Column] public DateTime CreatedOn { get; set; }





		[Column] public bool IsActive { get; set; }



	}

    

	[TableName("[robot].[UserMedias]")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class UserMedia : InstaCRDB.Record<UserMedia>  
    {

	

		public static class Columns
		{	
			
				public static string ID = @"ID";
			
				public static string InstaPK = @"InstaPK";
			
				public static string InstaID = @"InstaID";
			
				public static string InstaCode = @"InstaCode";
			
				public static string TakenAt = @"TakenAt";
			
				public static string MediaType = @"MediaType";
			
				public static string ProductType = @"ProductType";
			
				public static string ThumbnailUrl = @"ThumbnailUrl";
			
				public static string OwnerAccountInstaID = @"OwnerAccountInstaID";
			
				public static string OwnerAccountUsername = @"OwnerAccountUsername";
			
				public static string CommentCount = @"CommentCount";
			
				public static string LikeCount = @"LikeCount";
			
				public static string CationText = @"CationText";
			
				public static string VideoUrl = @"VideoUrl";
			
				public static string ViewCount = @"ViewCount";
			
				public static string VideoDuration = @"VideoDuration";
			
				public static string Title = @"Title";
			
				public static string RequesterAccountID = @"RequesterAccountID";
			
				public static string CreatedOn = @"CreatedOn";
			
				public static string IsActive = @"IsActive";
			
		}





		[Column] public long ID { get; set; }





		[Column] public long InstaPK { get; set; }





		[Column] public string InstaID { get; set; }





		[Column] public string InstaCode { get; set; }





		[Column] public DateTime TakenAt { get; set; }





		[Column] public int MediaType { get; set; }





		[Column] public string ProductType { get; set; }





		[Column] public string ThumbnailUrl { get; set; }





		[Column] public long OwnerAccountInstaID { get; set; }





		[Column] public string OwnerAccountUsername { get; set; }





		[Column] public int CommentCount { get; set; }





		[Column] public int LikeCount { get; set; }





		[Column] public string CationText { get; set; }





		[Column] public string VideoUrl { get; set; }





		[Column] public int? ViewCount { get; set; }





		[Column] public double? VideoDuration { get; set; }





		[Column] public string Title { get; set; }





		[Column] public long RequesterAccountID { get; set; }





		[Column] public DateTime CreatedOn { get; set; }





		[Column] public bool IsActive { get; set; }



	}


}
